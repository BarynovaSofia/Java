package ua.pro.baynova.ThreadsExample.lesson_15.Loggers.part_1;

import java.time.LocalTime;

class Worker implements Runnable {
    private final String name;

    public Worker(String name) {
        this.name = name;
    }

    @Override
    public void run() {
        log("üë∑ –ü—Ä–∏—Å—Ç—É–ø–∏–ª –∫ —Ä–∞–±–æ—Ç–µ");

        try {
            Thread.sleep((long) (Math.random() * 2000));
            log("üîß –°–æ–±–∏—Ä–∞–µ—Ç –¥–µ—Ç–∞–ª–∏...");

            Thread.sleep((long) (Math.random() * 2000));

            if (Math.random() < 0.3) {
                throw new RuntimeException("üî® –°–ª–æ–º–∞–ª—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç!");
            }

            log("‚úÖ –ó–∞–∫–æ–Ω—á–∏–ª —Ä–∞–±–æ—Ç—É —É—Å–ø–µ—à–Ω–æ");

        } catch (InterruptedException e) {
            log("‚ö†Ô∏è –†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞: " + e.getMessage());
        } catch (Exception e) {
            log("‚ùå –û—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    private void log(String message) {
        String threadName = Thread.currentThread().getName();
        String time = LocalTime.now().withNano(0).toString();

        System.out.printf("[%s] [%s] %s: %s%n", time, threadName, name, message);
    }
}